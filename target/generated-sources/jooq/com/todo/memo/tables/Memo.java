/**
 * This class is generated by jOOQ
 */
package com.todo.memo.tables;


import com.todo.memo.Keys;
import com.todo.memo.tables.records.MemoRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Memo extends TableImpl<MemoRecord> {

    private static final long serialVersionUID = -1689125574;

    /**
     * The reference instance of <code>memo.memo</code>
     */
    public static final Memo MEMO_ = new Memo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MemoRecord> getRecordType() {
        return MemoRecord.class;
    }

    /**
     * The column <code>memo.memo.id</code>.
     */
    public final TableField<MemoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>memo.memo.p_name</code>.
     */
    public final TableField<MemoRecord, String> P_NAME = createField("p_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>memo.memo.content</code>.
     */
    public final TableField<MemoRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>memo.memo.title</code>.
     */
    public final TableField<MemoRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>memo.memo.is_finish</code>.
     */
    public final TableField<MemoRecord, Integer> IS_FINISH = createField("is_finish", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>memo.memo.solution</code>.
     */
    public final TableField<MemoRecord, String> SOLUTION = createField("solution", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>memo.memo.create_time</code>.
     */
    public final TableField<MemoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>memo.memo.close_time</code>.
     */
    public final TableField<MemoRecord, Timestamp> CLOSE_TIME = createField("close_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>memo.memo.level</code>.
     */
    public final TableField<MemoRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>memo.memo.del</code>.
     */
    public final TableField<MemoRecord, Integer> DEL = createField("del", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>memo.memo.user_id</code>.
     */
    public final TableField<MemoRecord, Integer> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>memo.memo</code> table reference
     */
    public Memo() {
        this("memo", null);
    }

    /**
     * Create an aliased <code>memo.memo</code> table reference
     */
    public Memo(String alias) {
        this(alias, MEMO_);
    }

    private Memo(String alias, Table<MemoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Memo(String alias, Table<MemoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return com.todo.memo.Memo.MEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<MemoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_MEMO_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MemoRecord> getPrimaryKey() {
        return Keys.KEY_MEMO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MemoRecord>> getKeys() {
        return Arrays.<UniqueKey<MemoRecord>>asList(Keys.KEY_MEMO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Memo as(String alias) {
        return new Memo(alias, this);
    }

    /**
     * Rename this table
     */
    public Memo rename(String name) {
        return new Memo(name, null);
    }
}
